
{{? it.isPartial }}
angular.module('{{=it.appName}}').directive('{{=it.directiveName}}', [
    '$compile', function ($compile) {
        return {
            replace:        true,
            templateUrl:    '{{=it.viewUrl}}',
            controller:     '{{=it.controllerName}}'

            {{? it.directiveScope }}
            ,
            scope: {{=it.directiveScope}}
            {{?}}
            {{? it.rerenderExists }}
            ,
            link: function (scope, element, attr) {
                scope.rerenderComponent = function () {
                    $compile(element)(scope);
                };
            }
            {{?}}
        };
    }
]);
{{?}}

angular.module('{{=it.appName}}').controller('{{=it.controllerName}}', [
    {{~it.convertedParams :param}}'{{=param}}', {{~}}{{? it.isPage }}'initialModel', {{?}}'$scope', '$state', '$q', 'tplHelper',
    function ({{~it.params :param}}{{=param}}, {{~}}{{? it.isPage }}initialModel, {{?}}$scope, $state, $q, tplHelper) {

        {{~it.ngrefs :param}}
        var {{=param}} = angular;
        {{~}}

        {{? it.defaults          }}tplHelper.setDefaults($scope, {{=it.defaults}});{{?}}
        {{? it.presets           }}tplHelper.applyPresets($scope, {{=it.defaults}}, {{=it.presets}});{{?}}
        {{? it.attachToScope     }}tplHelper.attachToScope($scope, {{=it.attachToScope}});{{?}}
        {{? it.isPage            }}tplHelper.addInitModel($scope, initialModel, '{{=it.uiPartName}}');{{?}}
        {{? it.rerenderExists    }}tplHelper.generateRerender($scope, $state);{{?}}
        {{? it.remodelFnExists   }}tplHelper.generateRemodel($scope, '{{=it.controllerName}}', {{=it.isPartial}}, {{=it.remodelFn}}, {{=it.directiveScope}});{{?}}

        {{? it.eventBusListeners }}tplHelper.registerListeners($scope, {
        {{ for (var lName in it.eventBusListeners) { }}
            '{{=lName}}': {{=it.eventBusListeners[lName]}},
        {{ } }}
            end: null
        });{{?}}
        {{? it.uiEventHandlers   }}tplHelper.addEventHandlers($scope, '{{=it.controllerName}}', {
        {{ for (var uName in it.uiEventHandlers) { }}
            '{{=uName}}': {{=it.uiEventHandlers[uName]}},
        {{ } }}
            end: null
        });{{?}}
        {{? it.validations       }}tplHelper.addValidations($scope, {
        {{ for (var vName in it.validations) { }}
            '{{=vName}}': {{=it.validations[vName]}},
        {{ } }}
            end: null
        });{{?}}
        {{? it.remodelObjExists  }}tplHelper.generateRemodel($scope, '{{=it.controllerName}}', {{=it.isPartial}}, {
        {{ for (var rName in it.remodelObj) { }}
            '{{=rName}}': {{=it.remodelObj[rName]}},
        {{ } }}
            end: null
        }, {{=it.directiveScope}});{{?}}

        $q.when(true)
        {{? it.useRemodelOnWatch }}.then(function() {tplHelper.remodelOnScopeChange($scope, {{=it.remodelWatchers}});}){{?}}
        {{? it.useRemodelOnEvent }}.then(function() {tplHelper.remodelOnEvent($scope, {{=it.remodelEvents}});}){{?}}
        {{? it.useRerenderOnWatch}}.then(function() {tplHelper.rerenderOnScopeChange($scope, {{=it.rerenderWatchers}});}){{?}}
        {{? it.useRerenderOnEvent}}.then(function() {tplHelper.rerenderOnEvent($scope, {{=it.rerenderEvents}});}){{?}}
        {{? it.clientLoadExists  }}.then(function() {tplHelper.onClientLoad({{=it.clientLoadFn}});}){{?}}
        .then(function() { return true; });

        {{=it.body}}
    }
]);

angular.module('{{=it.appName}}').run([
    '$templateCache', function ($templateCache) {
        $templateCache.put('{{=it.viewUrl}}', '{{=it.viewHtml}}');
    }
]);